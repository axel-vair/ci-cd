name: Symfony CI/CD

on:
  repository_dispatch:
    types: [trigger-cd]

permissions:
  contents: read
  packages: write

jobs:
  symfony-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ci-cd code
        uses: actions/checkout@v4

      - name: List files in ci-cd
        run: ls -la ./

      - name: Checkout safebase code
        uses: actions/checkout@v4
        with:
          repository: axel-vair/safebase
          path: safebase

      - name: List files in safebase for debugging
        run: ls -la ./safebase

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Copy .env.test.local
        run: php -r "file_exists('safebase/.env.test.local') || copy('safebase/.env.test', 'safebase/.env.test.local');"

      - name: Cache Composer packages
        uses: actions/cache@v3
        with:
          path: safebase/vendor
          key: ${{ runner.os }}-php-${{ hashFiles('safebase/**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Dependencies
        run: |
          cd safebase
          composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Create Database
        run: |
          cd safebase
          mkdir -p data
          touch data/database.sqlite

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
        run: |
          cd safebase
          vendor/bin/phpunit

      # Configuration de Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Job pour Build et Push de l'image Docker
      - name: Build and Push Docker Image
        if: success()  # Ex√©cute ce job seulement si les tests passent
        uses: docker/build-push-action@v5
        with:
          context: ./safebase
          file: ./safebase/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}

      - name: Send notification to Google Chat
        if: always()
        uses: SimonScholz/google-chat-action@main
        with:
          webhookUrl: ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
          jobStatus: ${{ job.status }}
          title: 'CI/CD Notification'
          subtitle: 'Safebase Tests'
